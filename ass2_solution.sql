/*Avi Ferdman 316420132, Andrey Palman 320686736*/

CREATE TABLE IF NOT EXISTS "Apartment" (
	StreetName VARCHAR NOT NULL,
	Number INTEGER NOT NULL,
	Door INTEGER NOT NULL,
	Type INTEGER NOT NULL,
	NID INTEGER NOT NULL,
	SizeSquareMeter float NOT NULL,
	FOREIGN KEY("NID") REFERENCES "Neighborhood" ("NID") ON UPDATE RESTRICT,
	PRIMARY KEY("StreetName","Number","Door")
);
	
CREATE TABLE IF NOT EXISTS "Car" (
	CID INTEGER NOT NULL,
	CellPhoneNumber VARCHAR NOT NULL,
	ID INTEGER NOT NULL,
	CreditCard INTEGER NOT NULL,
	ExpirationDate date NOT NULL,
	ThreeDigits VARCHAR,
	FOREIGN KEY("ID") REFERENCES "Resident"("RID") ON DELETE CASCADE,
	PRIMARY KEY("CID")
);

CREATE TABLE IF NOT EXISTS "CarParking" (
	CID INTEGER NOT NULL,
	AID INTEGER,
	StartTime date NOT NULL,
	EndTime date DEFAULT NULL,
	Cost float DEFAULT (0),
	FOREIGN KEY("AID") REFERENCES "ParkingArea"("AID") ON DELETE SET NULL ON UPDATE CASCADE,
	FOREIGN KEY("CID") REFERENCES "Car"("CID") ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY("CID","StartTime","EndTime"),
	CHECK ("StartTime" <= "EndTime")
);

CREATE TABLE IF NOT EXISTS "ParkingArea" (
	AID INTEGER NOT NULL,
	NID INTEGER,
	Name VARCHAR NOT NULL,
	PricePerHour INTEGER NOT NULL,
	MaxPricePerDay INTEGER NOT NULL,
	FOREIGN KEY("NID") REFERENCES "Neighborhood"("NID") ON UPDATE CASCADE ON DELETE CASCADE,
	PRIMARY KEY("AID"),
	CHECK(MaxPricePerDay >= PricePerHour)
);

CREATE TABLE IF NOT EXISTS "Neighborhood" (
	NID INTEGER NOT NULL,
	Name VARCHAR NOT NULL,
	PRIMARY KEY("NID")
);

CREATE TABLE IF NOT EXISTS "CellPhones" (
	EID INTEGER NOT NULL,
	PhoneNumber INTEGER NOT NULL,
	FOREIGN KEY("EID") REFERENCES "Employee"("EID"),
	PRIMARY KEY("EID","PhoneNumber")
);

CREATE TABLE IF NOT EXISTS "Address" (
	EID INTEGER NO NULL,
	City VARCHAR NOT NULL,
	StreetName VARCHAR NOT NULL,
	HouseNumber INTEGER NOT NULL,
	Door INTEGER NOT NULL,
	FOREIGN KEY("EID") REFERENCES "Employee"("EID"),
	PRIMARY KEY("EID")
);

CREATE TABLE IF NOT EXISTS "Employee" (
	EID INTEGER NOT NULL,
	FirstName VARCHAR NOT NULL,
	LastName VARCHAR NOT NULL,
	BirthDate date NOT NULL,
	City Text NOT NULL,
	StreetName VARCHAR NOT NULL,
	Number INTEGER NOT NULL,
	Door INTEGER NOT NULL,
	PRIMARY KEY("EID"),
	CHECK ("BirthDate" < date('now'))
);

CREATE TABLE IF NOT EXISTS "ConstructorEmployee" (
	EID INTEGER NOT NULL,
	CompanyName VARCHAR NOT NULL,
	SalaryPerDay INTEGER NOT NULL,
	FOREIGN KEY("EID") REFERENCES "Employee"("EID"),
	PRIMARY KEY("EID")
);

CREATE TABLE IF NOT EXISTS "OfficialEmployee" (
    EID INTEGER NOT NULL,
	StartWorkingDate date NOT NULL,
	Department INTEGER NOT NULL,
	Degree INTEGER NOT NULL,
	FOREIGN KEY("Department") REFERENCES "Department"("DID") ON DELETE CASCADE,
	FOREIGN KEY("EID") REFERENCES "Employee"("EID"),
	PRIMARY KEY("EID"),
	CHECK ("StartWorkingDate" < date('now'))
);

CREATE TABLE IF NOT EXISTS "ProjectConstructorEmployee" (
	PID INTEGER NOT NULL,
	EID INTEGER NOT NULL,
	StartWorkingDate DATE NOT NULL,
	JobDescription VARCHAR NOT NULL,
	EndWorkingDate DATE DEFAULT NULL,
	FOREIGN KEY("PID") REFERENCES "Project"("PID"),
	FOREIGN KEY("EID") REFERENCES "ConstructorEmployee"("EID") ON DELETE RESTRICT,
	PRIMARY KEY("EID","PID"),
	CHECK (StartWorkingDate <= EndWorkingDate)
);


CREATE TABLE IF NOT EXISTS "Project" (
	PID INTEGER NOT NULL,
	Neighborhood INTEGER NOT NULL,
	Name VARCHAR NOT NULL,
	Description VARCHAR NOT NULL,
	Budget float NO NULL,
	FOREIGN KEY("Neighborhood") REFERENCES "Neighborhood"("NID") ON UPDATE RESTRICT ON DELETE RESTRICT,
	PRIMARY KEY("PID")
);

CREATE TABLE IF NOT EXISTS "Department" (
	DID INTEGER NOT NULL,
	Name VARCHAR NOT NULL,
	Description VARCHAR NOT NULL,
	ManagerID INTEGER,
	FOREIGN KEY("ManagerID") REFERENCES "OfficialEmployee"("EID") ON DELETE RESTRICT,
	PRIMARY KEY("DID")
);

CREATE TABLE IF NOT EXISTS "Resident" (
	RID INTEGER NOT NULL UNIQUE,
	FirstName VARCHAR NOT NULL,
	LastName VARCHAR NOT NULL,
	BirthDate date NOT NULL,
	City VARCHAR,
	StreetName VARCHAR,
	Number INTEGER NOT NULL,
	Door INTEGER NOT NULL,
	FOREIGN KEY("StreetName", "Number", "Door") REFERENCES "Apartment"("StreetName", "Number", "Door") ON DELETE RESTRICT,
	PRIMARY KEY("RID"),
	CHECK ("BirthDate" < date('now') )
);

CREATE TABLE IF NOT EXISTS "TrashCan" (
	CatalogID INTEGER NOT NULL,
	RID INTEGER NOT NULL,
	CreationDate date NOT NULL,
	ExpirationDate date NOT NULL,
	FOREIGN KEY("RID") REFERENCES "Resident"("RID"),
	PRIMARY KEY("CatalogID"),
	CHECK ("CreationDate" < "ExpirationDate" ),
	CHECK ("ExpirationDate" >= date('now') )
);
